version: '3.8'

services:
  postgres:
    image: postgres:11
    container_name: "postgres"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - "./data/postgres:/var/lib/postgresql/data"
    ports:
      - 5432:5432
    networks:
      - net

  api:
    container_name: api
    build:
      context: ./server
      dockerfile: Dockerfile.production
    volumes:
      - './server:/server'
      - '/server/node_modules'
    restart: always
    ports:
      - "9000:9000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    depends_on:
      - postgres
    networks:
      - net

  client:
    container_name: client
    build:
      context: ./client
      dockerfile: Dockerfile
    volumes:
      - './client:/client'
      - '/client/node_modules'
    restart: on-failure:5
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_GRAPHQL_URL=${REACT_APP_GRAPHQL_URL}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api
    networks:
      - net

networks:
  net:
    driver: "bridge"
